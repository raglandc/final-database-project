// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Movies {
  MoviesID     Int     @id //@default(cuid())
  M_title      String
  M_overview   String?
  m_popularity Decimal @default(0.00)
  m_voteAvg    Decimal @default(0.00)
  m_voteCount  Int     @default(0)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String()
  access_token      String? @db.String()
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String()
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model title_akas {
  titleId         String
  ordering        Int
  title           String
  region          String
  language        String
  types           String[]
  attributes      String[]
  isOriginalTitle Boolean

  @@id([titleId, ordering])
}

model title_basics {
  tconst         String
  titleType      String
  primaryTitle   String
  originalTitle  String
  isAdult        Boolean
  startYear      Int?
  endYear        Int?
  runtimeMinutes Int?
  genres         String[]

  @@id([tconst])
}

model title_crew {
  tconst    String
  directors String[]
  writers   String[]

  @@id([tconst])
}

model title_episode {
  tconst        String
  parentTconst  String
  seasonNumber  Int
  episodeNumber Int

  @@id([tconst])
  @@unique([parentTconst, seasonNumber, episodeNumber])
}

model title_principal {
  tconst     String
  ordering   Int
  nconst     String
  category   String
  job        String?
  characters String?

  @@id([tconst, ordering])
  @@unique([nconst])
}

model title_rating {
  tconst        String
  averageRating Float
  numVotes      Int

  @@id([tconst])
}

model person {
  nconst            String
  primaryName       String
  birthYear         Int?
  deathYear         Int?
  primaryProfession String[]
  knownForTitles    String[]

  @@id([nconst])
}
