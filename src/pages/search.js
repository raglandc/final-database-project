import { useSession } from 'next-auth/react';
import { useEffect, useState } from "react"
import { useRouter } from 'next/router';

import Layout from '@/components/Layout'
import MovieDisplay from '@/components/MovieDisplay';
import Head from 'next/head'

export default function Search() {
  const { data : session } = useSession();
  const router = useRouter();

  //form data
  const [title, setTitle] = useState("");
  const [year, setYear] = useState("");
  const [genre, setGenre] = useState("");
  const [rating, setRating] = useState(10.0);

  //page changing props
  const [movies, setMovies] = useState([]);
  const [page, setPage] = useState(1);

  //constant
  const PER_PAGE = 12;

  //API route req handler
  async function handleSubmit(event)
  {
    event.preventDefault();
    
    const response = await fetch(`/api/get-movies?page=${page}`, {
      method: "POST",
      body: JSON.stringify({title, year, rating, genre, page, PER_PAGE}),
      headers: {
        "Content-Type": "application/json",
      }
    })
    
    const { movies } = await response.json();
    setMovies(movies);
  }

  //pagination button handlers
  function handlePrevPage() {
    setPage((prevPage) => Math.max(prevPage - 1, 0));
  }

  function handleNextPage() {
    setPage((prevPage) => prevPage + 1);
  }

  if (session) {
    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Layout>
          <main className='grid grid-cols-12 gap-4 min-h-screen'>
            <aside className='col-span-3 xl:col-span-2 h-full bg-teal-800'>
            <div className="w-11/12 mx-auto mt-8 text-white">
              <form 
                  onSubmit={handleSubmit}
                  className="flex flex-col rounded-md px-5 py-5 m-auto"
              > 
                <h2 className="text-4xl my-3">Search</h2>

                
                <label htmlFor="title" className="mt-1 text-white">Title</label>
                <input 
                  value={title} onChange={(e) => setTitle(e.target.value)}
                  type="text" 
                  id="title" 
                  placeholder="Title" 
                  className="bg-transparent text-white border-b-4 my-1 p-3 rounded-sm hover:border-green-600 hover:cursor-pointer"
                />

                <label htmlFor="year" className="mt-1 ">Year</label>
                <input
                  value={year}
                  onChange={(e) => setYear(e.target.value)}
                  type="text"
                  id="year"
                  placeholder="Year"
                  className="my-1 bg-transparent hover:cursor-pointer border-b-4 p-3 rounded-sm hover:border-green-600"
                />

                <label htmlFor="Genre" className="mt-1 ">Genre</label>
                <select
                  value={genre}
                  onChange={(e) => setGenre(e.target.value)}
                  id="genre"
                  
                  className="my-1 bg-transparent hover:cursor-pointer border-b-4 p-3 rounded-sm hover:border-green-600"
                >
                  <option value="Action">Action</option>
                  <option value="Adventure">Adventure</option>
                  <option value="Animation">Animation</option>
                  <option value="Comedy">Comedy</option>
                  <option value="Drama">Drama</option>
                  <option value="Family">Family</option>
                  <option value="Mystery">Mystery</option>
                  <option value="Thriller">Thriller</option>
                  <option value="War">War</option>
                </select>

                <label className="mt-1" htmlFor="rating">Rating: {rating}</label>
                <input
                  className='my-3'
                  id='rating'
                  type="range"
                  min="1.0"
                  max="10.0"
                  step="0.1"
                  value={rating}
                  onChange={(e) => setRating(parseFloat(e.target.value))}
                />

                <button type='submit' className="my-3 p-3 hover:bg-green-600 bg-green-500 border-2 rounded-md">Search</button>
              </form>
            </div>
            </aside>
            <section className='w-10/12 h-full m-auto col-start-4 xl:col-start-3 col-end-13'>
              {movies.length > 0 && <p className='my-4 font-bold text-gray-500'>{movies.length} movies found</p>}
              <MovieDisplay 
                movies={movies}
                session={session}
                page={page}
              />
              <div className='p-4 flex justify-around items-center bg-red-500'>
                <button 
                  style={page <= 0 || movies.length == 0 ? {opacity: 0} : {opacity: 1}}
                  onClick={handlePrevPage}
                >
                    Previous
                </button>
                <button
                  style={movies.length === 12 ? {opacity: 1} : {opacity: 0}}
                  onClick={handleNextPage}>
                    Next
                </button>
              </div>
            </section>
          </main>
        </Layout>
      </>
    )
  }
  else 
  {
    return <p>No user signed in</p>
  }
}